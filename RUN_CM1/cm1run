#!/bin/bash
expname=`basename "$PWD"`
echo "*******************"
echo "running experiment: $expname"
echo "*******************"

# ----------------------------------------------------------------------
# Determine parameters and directories
# ----------------------------------------------------------------------
source job.input
INPUTDIR=/home/b/b381871/cm1/RUN_CM1/INPUT
echo "jobname:          $jobname"
echo "nodes:		$nodes"
echo "tasks-per-node:   $tasks_per_node"
echo "cpus-per-task:    $cpus_per_task"
echo "Model:            $MODEL"
echo

# establish run directory
RUNDIR=/scratch/b/b381871/cm1_runs/$jobname
if [ ! -d $RUNDIR ]; then
    mkdir -p $RUNDIR
else
	if [ -f $RUNDIR/COUNTER ]; then
    	echo "remove COUNTER to create new setup (this is blunder protection)"
    	exit 1
	else
		echo "No counter, so deleting the whole directory..."
		rm -r ${RUNDIR}
    	mkdir -p $RUNDIR
	echo "new directory created! Proceding..."
    fi
fi

# ----------------------------------------------------------------------
# setup: copy files and prepare input files etc
# ----------------------------------------------------------------------
cd $INPUTDIR
echo 0 > COUNTER

# change to work directory
cd $RUNDIR
# copy files and link executable
files="COUNTER prep_namelist.py namelist.input LANDUSE.TBL input_sounding RRTMG_LW_DATA RRTMG_SW_DATA input_grid_z myzs.nc myflux.nc"
ln -s $MODEL cm1.exe
for file in $files; do
    echo "copy: $file"
    set +e
    cp ${INPUTDIR}/$file .
    set -e
done

echo "creating namelist files for restart jobs..."
python3 prep_namelist.py $run_time $num_files

# ----------------------------------------------------------------------
# run
# ----------------------------------------------------------------------
echo "creating run script: cm1.exe.run"

cat > cm1.exe.run << runscript
#!/bin/bash
#SBATCH --job-name=$jobname
#SBATCH --partition=compute
#SBATCH --nodes=$nodes
#SBATCH --ntasks-per-node=$tasks_per_node
#SBATCH --exclusive
#SBATCH --mem=0
#SBATCH --time=$time
#SBATCH --account=bb1096
#SBATCH --output=runlog%j.out
#SBATCH --error=error%j.out
#********************************************************************
set -x
# limit stacksize
# and core file size
ulimit -s 10240000
#ulimit -s unlimited
ulimit -c 0

# OpenMPI - minimal environmental settings (UCX toolkit):
export OMPI_MCA_osc="ucx"
export OMPI_MCA_pml="ucx"
export OMPI_MCA_btl="self"
export UCX_HANDLE_ERRORS="bt"
export OMPI_MCA_pml_ucx_opal_mem_hooks=1
# For pre-processing step (Shweta):
export OMPI_MCA_coll_tuned_use_dynamic_rules="true"
export OMPI_MCA_coll_tuned_alltoallv_algorithm=2
#
export OMPI_MCA_io="romio321"           # basic optimisation of I/O
export UCX_TLS="shm,rc_mlx5,rc_x,self"  # for jobs using LESS than 150 nodes
##export UCX_TLS="shm,dc_mlx5,dc_x,self"        # for jobs using MORE than 150 nodes
export UCX_UNIFIED_MODE="n"             # JUST for homogeneous jobs on CPUs, do not use for GPU nodes

# change to RUN directory
RUNDIR=/scratch/b/b381871/cm1_runs/$jobname
cd $RUNDIR
runscript

cat >> cm1.exe.run << 'runscript'
# get correct input file
# ----------------------
if [ ! -f COUNTER ]; then
    echo "COUNTER is missing"
    exit 1
else
    cnt=`cat COUNTER`
    scnt=$(printf "%02d" $cnt)
    inpfile="namelist.input${scnt}"
fi
echo "*** This is run number: $cnt"
echo "*** Input file: $inpfile"
cp $inpfile namelist.input

# ----------------------------------------------------------------------
# run the model
# ----------------------------------------------------------------------
echo "running CM1 with $inpfile"

srun -l --hint=nomultithread --cpu_bind=v --distribution=block:cyclic:block cm1.exe

echo "Finished run number: $cnt"
echo

# update counter
# --------------
cd $RUNDIR
cnt=`cat COUNTER`
cnt=$(($cnt + 1))
echo $cnt > COUNTER

# next iteration
scnt=$(printf "%02d" $cnt)
inpfile="namelist.input${scnt}"
if [ -f $inpfile ]; then
    echo "submit next job..."
    sbatch cm1.exe.run
else
    echo "*******************"
    echo "Simulation finished."
    echo "*******************"
    mkdir log
    mv runlog* error*  log/
    mkdir rst
    mv cm1rst* rst/
fi

runscript

echo "*****************************"
echo "Setup finished for experiment: $jobname"
echo "*****************************"

echo "Submitting run job..."
sbatch cm1.exe.run
echo "...done"

